lm1<-lm(mydata$PopBio~mydata$Time,data=mydata)
lm1
linearmodel<-function(t,r,N_0){
    return(t*r+N_0)
}
timepoints<-mydata$Time
linear_points <- linearmodel(t = timepoints, 
         r = coef(lm1)[2],
         N_0 = coef(lm1)[1])
linear_df1 <- data.frame(timepoints, linear_points)
linear_df1$model <- "Linear equation"
names(linear_df1) <- c("Time", "PopBio", "model")
p_lm <- ggplot(mydata, aes(x = mydata$Time, y = mydata$PopBio)) +
 geom_point(size = 3) +
 geom_line(data = linear_df1, aes(x = Time, y = PopBio, col = model), size = 1) +
 theme(aspect.ratio=1)+
 labs(x = "Time", y = "Biological Population")
 p_lm
################diagnostic plot#################
par(mfrow = c(2, 2), mar = c(5, 5, 1.5, 1.5))
plot(lm1)
################################################
############### R squared #####################
RSS_lm1<- sum(residuals(lm1)^2)
TSS_lm1 <- sum((linear_df1$PopBio - mean(linear_df1$PopBio))^2)
RSq_lm1 <- 1 - (RSS_lm1/TSS_lm1)
RSq_lm1 #0.9459214
###############################################
#####AIC Calculation########
#k = number of parameters, n = number of samples
lm1_sse<- sum((mydata$PopBio-linear_df1$PopBio)^2)
lm1_L<- (-length(linear_df1$PopBio)/2)*log(2*pi)-(length(linear_df1$PopBio)/2)*log(lm1_sse/length(linear_df1$PopBio))-length(linear_df1$PopBio)/2
lm1_AIC <-(2*3-2*lm1_L)/length(linear_df1$PopBio)
lm1_AIC
################AICc#################
lm1_AICc <-lm1_AIC+(2*3*(3+1))/(length(linear_df1$PopBio)-3-1)
lm1_AICc
#Log linear model
#Add 1 column for log(mydata$PopBio)
mydata$log_PopBio<-log(mydata$PopBio)
lm2<-lm(mydata$log_PopBio~mydata$Time,data=mydata)
summary(lm2)
linearmodel2<-function(t,r,logN_0){
    return(t*r+logN_0)
}
timepoints<-mydata$Time
linear_points <- linearmodel2(t = timepoints, 
         r = coef(lm2)[2],
         logN_0 = coef(lm2)[1])
linear_df2 <- data.frame(timepoints, linear_points)
linear_df2$model <- "Logrithm Linear equation"
names(linear_df2) <- c("Time", "Log_PopBio", "model")
p_lm2 <- ggplot(mydata, aes(x = mydata$Time, y = mydata$log_PopBio)) +
 geom_point(size = 3) +
 geom_line(data = linear_df2, aes(x = Time, y = Log_PopBio, col = model), size = 1) +
 theme(aspect.ratio=1)+
 labs(x = "Time", y = "Log(Biological Population)")
 p_lm2
#################Diagnostic plot#################
par(mfrow = c(2, 2), mar = c(5, 5, 1.5, 1.5))
plot(lm2)
#################################################
############### R squared #####################
RSS_lm2<- sum(residuals(lm2)^2)
TSS_lm2 <- sum((linear_df2$Log_PopBio - mean(linear_df2$Log_PopBio))^2)
RSq_lm2 <- 1 - (RSS_lm2/TSS_lm2)
RSq_lm2 # 0.5771044
###############################################
#####AIC Calculation########
#k = number of parameters, n = number of samples
lm2_sse<- sum((mydata$PopBio-linear_df2$Log_PopBio)^2)
lm2_L<- (-length(linear_df2$Log_PopBio)/2)*log(2*pi)-(length(linear_df2$Log_PopBio)/2)*log(lm2_sse/length(linear_df2$Log_PopBio))-length(linear_df2$Log_PopBio)/2
lm2_AIC <-(2*3-2*lm2_L)/length(linear_df2$Log_PopBio)
lm2_AIC
################AICc#################
lm2_AICc <-lm2_AIC+(2*3*(3+1))/(length(linear_df1$PopBio)-3-1)
lm2_AICc
#Polynomial model
poly<-lm(mydata$PopBio~poly(mydata$Time,2,raw=TRUE),data=mydata)
summary(poly)
polymodel<-function(t,a,b,N_0){
    return(a*(t^2)+b*t+N_0)
}
timepoints<-mydata$Time
poly_points <- polymodel(t = timepoints, 
         a = coef(poly)[3],  
         N_0 = coef(poly)[1],
         b = coef(poly)[2])
poly_df1 <- data.frame(timepoints, poly_points)
poly_df1$model <- "Polynomial equation"
names(poly_df1) <- c("Time", "PopBio", "model")
p_polylm <- ggplot(mydata, aes(x = mydata$Time, y = mydata$PopBio)) +
 geom_point(size = 3) +
 geom_line(data = poly_df1, aes(x = Time, y = PopBio, col = model), size = 1) +
 theme(aspect.ratio=1)+
 labs(x = "Time", y = "Biological Population")
 p_polylm
 ##############diagnostic plot###############
par(mfrow = c(2, 2), mar = c(5, 5, 1.5, 1.5))
plot(poly)
#############################################
############### R squared #####################
RSS_poly<- sum(residuals(poly)^2)
TSS_poly <- sum((poly_df1$PopBio - mean(poly_df1$PopBio))^2)
RSq_poly <- 1 - (RSS_poly/TSS_poly)
RSq_poly #0.9937668
###############################################
#########################AIC######################
poly_sse<- sum((mydata$PopBio-poly_df1$PopBio)^2)
poly_L<- (-(length(poly_df1$PopBio)/2)*log(2*pi)-(length(poly_df1$PopBio)/2)*log(poly_sse/length(poly_df1$PopBio))-length(poly_df1$PopBio)/2)
poly_AIC <-(2*4-2*poly_L)/length(poly_df1$PopBio)
poly_AIC
######################AICc#########################
poly_AICc <-poly_AIC+(2*4*(4+1))/(length(poly_df1$PopBio)-4-1)
poly_AICc
#OLS
estimate_r<-max(diff(log(mydata$PopBio)))/abs(mean(diff(mydata$Time)))
estimate_r
sd(mydata$Time,na.rm = TRUE)
lm_growth <- lm(log(mydata$PopBio) ~ mydata$Time, data = mydata[mydata$Time > 20 & mydata$Time < 600,])
summary(lm_growth)
lm_growth_r<- estimate_r #Estimate r from ols_growth
#NLLS using logistic model
logistic_model <- function(t, r_max, K, N_0){
 return(N_0 * K * exp(r_max * t)/(K + N_0 * (exp(r_max * t) - 1)))
}
#fit starting parameters for the model
N_0_start <- min(mydata$PopBio) # lowest population size
K_start <- max(mydata$PopBio) # highest population size
r_max_start <- lm_growth_r # use estimate from the OLS fittinfg
fit_logistic <- nlsLM(mydata$PopBio ~ logistic_model(t = mydata$Time, r_max, K, N_0), mydata,
      list(r_max=r_max_start, N_0 = N_0_start, K = K_start))
summary(fit_logistic)
    #plot this model
timepoints <- mydata$Time
logistic_points <- logistic_model(t = timepoints, 
         r_max = coef(fit_logistic)["r_max"], 
         K = coef(fit_logistic)["K"], 
         N_0 = coef(fit_logistic)["N_0"])
logistic_df1 <- data.frame(timepoints, logistic_points)
logistic_df1$model <- "Logistic equation"
names(logistic_df1) <- c("Time", "PopBio", "model")
p_nlsLM <- ggplot(mydata, aes(x = mydata$Time, y = mydata$PopBio)) +
 geom_point(size = 3) +
 geom_line(data = df1, aes(x = Time, y = PopBio, col = model), size = 1) +
 theme(aspect.ratio=1)+
 labs(x = "Time", y = "Biological Population")
 p_nlsLM
#################diagnostic plot####################
par(mfrow = c(2, 2), mar = c(5, 5, 1.5, 1.5))
plot(fit_logistic)
######################################################
########### R squared ###################
RSS_Logistic <- sum(residuals(fit_logistic)^2)
TSS_Logistic <- sum((logistic_df1$PopBio - mean(logistic_df1$PopBio))^2)
RSq_Logistic <- 1 - (RSS_Logistic/TSS_Logistic)
RSq_Logistic # 0.986727
########################################
###########AIC############
###########k = 4, n = length(logistic_df1$PopBio)
logistic_sse<- sum((mydata$PopBio-logistic_df1$PopBio)^2)
logistic_L<- (-(length(logistic_df1$PopBio)/2)*log(2*pi)-(length(logistic_df1$PopBio)/2)*log(logistic_sse/length(logistic_df1$PopBio))-length(logistic_df1$PopBio)/2)
logistic_AIC <-(2*4-2*logistic_L)/length(logistic_df1$PopBio)
logistic_AIC
##################AICc############################
logistic_AICc <-logistic_AIC+(2*4*(4+1))/(length(logistic_df1$PopBio)-4-1)
logistic_AICc
#cat(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC)
#cat(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc)
#fit in logrithm one
 p_log_nlsLM <- ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio) )) +
 geom_point(size = 3) +
 geom_line(data = df1, aes(x = Time, y = log(PopBio), col = model), size = 1) +
 theme(aspect.ratio=1)+ 
 labs(x = "Time", y = "log(Biological Population)")
p_log_nlsLM
ggplot(mydata, aes(x = mydata$PopBio, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 theme(aspect.ratio = 1)+ 
 labs(x = "N", y = "log(Popbio)")
fit_gompertz <- nls(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),control  = nls.lm.control(maxiter = 100),trace=TRUE)
fit_gompertz <- nlsLM()(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),control  = nls.lm.control(maxiter = 100),trace=TRUE)
 gompertz_model <- function(t, r_max, K, N_0, t_lag){ 
 return(N_0 + (K - N_0) * exp(-exp(r_max * exp(1) * (t_lag - t)/((K - N_0) * log(10)) + 1)))
}
N_0_start <- min(log(mydata$PopBio)) # lowest population size, note log scale
K_start <- max(log(mydata$PopBio)) # highest population size, note log scale
r_max_start <- 0.0043931 # use our previous estimate from the OLS fitting from above
t_lag_start <- mydata$Time[which.max(diff(diff(log(mydata$PopBio))))] # find last timepoint of lag phase
t_lag_start
fit_gompertz <- nls(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),control  = nls.lm.control(maxiter = 100),trace=TRUE)
fit_gompertz <- nls(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),trace=TRUE)
fit_gompertz <- nlsLM(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),trace=TRUE)
estimate_r
 gompertz_model <- function(t, r_max, K, N_0, t_lag){ 
 return(N_0 + (K - N_0) * exp(-exp(r_max * exp(1) * (t_lag - t)/((K - N_0) * log(10)) + 1)))
}
N_0_start <- min(log(mydata$PopBio)) # lowest population size, note log scale
K_start <- max(log(mydata$PopBio)) # highest population size, note log scale
r_max_start <- 0.003483435 # use our previous estimate from the OLS fitting from above
t_lag_start <- mydata$Time[which.max(diff(diff(log(mydata$PopBio))))] # find last timepoint of lag phase
t_lag_start
fit_gompertz <- nlsLM(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),trace=TRUE)
fit_gompertz <- nlsLM(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),control.lower= maxiter = 100,trace=TRUE)
list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),control.lower.maxiter = 100,trace=TRUE)
?nlsLM
fit_gompertz <- nlsLM(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),trace=TRUE)
summary(fit_gompertz)
timepoints <- mydata$Time
logistic_points <- log(logistic_model(t = timepoints, 
          r_max = coef(fit_logistic)["r_max"], 
          K = coef(fit_logistic)["K"], 
          N_0 = coef(fit_logistic)["N_0"]))
gompertz_points <- gompertz_model(t = timepoints, 
         r_max = coef(fit_gompertz)["r_max"], 
         K = coef(fit_gompertz)["K"], 
         N_0 = coef(fit_gompertz)["N_0"], 
         t_lag = coef(fit_gompertz)["t_lag"])
df1 <- data.frame(timepoints, logistic_points)
df1$model <- "Logistic model"
names(df1) <- c("Time", "Log(PopBio)", "model")
df2 <- data.frame(timepoints, gompertz_points)
df2$model <- "Gompertz model"
names(df2) <- c("Time", "Log(PopBio)", "model")
model_frame <- rbind(df1, df2)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw() + # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")
timepoints <- seq(0,700,diff(mean(mydata$Time)))
diff(mean(mydata$Time))
mean(diff(mydata$Time))
timepoints <- seq(0,700,23.92)
timepoints <- seq(0,700,23.92)
logistic_points <- log(logistic_model(t = timepoints, 
          r_max = coef(fit_logistic)["r_max"], 
          K = coef(fit_logistic)["K"], 
          N_0 = coef(fit_logistic)["N_0"]))
gompertz_points <- gompertz_model(t = timepoints, 
         r_max = coef(fit_gompertz)["r_max"], 
         K = coef(fit_gompertz)["K"], 
         N_0 = coef(fit_gompertz)["N_0"], 
         t_lag = coef(fit_gompertz)["t_lag"])
df1 <- data.frame(timepoints, logistic_points)
df1$model <- "Logistic model"
names(df1) <- c("Time", "Log(PopBio)", "model")
df2 <- data.frame(timepoints, gompertz_points)
df2$model <- "Gompertz model"
names(df2) <- c("Time", "Log(PopBio)", "model")
model_frame <- rbind(df1, df2)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw() + # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw() + scale_y_continuous(limits = c(0, 10)+# make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw() + scale_y_continuous(limits = c(0, 10)+# make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw()+ # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")+ scale_y_continuous(limits = c(0, 10)
)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw()+ # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")+ scale_y_continuous(limits = c(0, 10))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw()+ # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")+ scale_y_continuous(limits = c(0, 700))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
 geom_point(size = 3) +
 geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
 theme_bw()+ # make the background white
 theme(aspect.ratio=1)+ # make the plot square 
 labs(x = "Time", y = "log(PopBio)")+ scale_x_continuous(limits = c(0, 700))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
theme_bw()+ # make the background white
theme(aspect.ratio=1)+ # make the plot square 
labs(x = "Time", y = "log(PopBio)")+ scale_x_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200)) +
scale_y_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
theme_bw()+ # make the background white
+ # make the plot square 
abs(x = "Time", y = "log(PopBio)")+ scale_x_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200)) +
scale_y_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = "Time", y = "Log(PopBio)", col = model), size = 1) +
theme_bw()+ # make the background white # make the plot square 
labs(x = "Time", y = "log(PopBio)")+ scale_x_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200)) +
scale_y_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200))
    # Modified gompertz growth model (Zwietering 1990)
 gompertz_model <- function(t, r_max, K, N_0, t_lag){ 
 return(N_0 + (K - N_0) * exp(-exp(r_max * exp(1) * (t_lag - t)/((K - N_0) * log(10)) + 1)))
}
N_0_start <- min(log(mydata$PopBio)) # lowest population size, note log scale
K_start <- max(log(mydata$PopBio)) # highest population size, note log scale
r_max_start <- 0.003483435 # use our previous estimate from the OLS fitting from above
t_lag_start <- mydata$Time[which.max(diff(diff(log(mydata$PopBio))))] # find last timepoint of lag phase
t_lag_start
#fit Gompertz by using above starting data
fit_gompertz <- nlsLM(log(mydata$PopBio) ~ gompertz_model(t = mydata$Time, r_max, K, N_0, t_lag), mydata,
      list(t_lag=t_lag_start, r_max=r_max_start, N_0 = N_0_start, K = K_start),trace=TRUE)
summary(fit_gompertz)
timepoints <- mydata$Time
logistic_points <- log(logistic_model(t = timepoints, 
          r_max = coef(fit_logistic)["r_max"], 
          K = coef(fit_logistic)["K"], 
          N_0 = coef(fit_logistic)["N_0"]))
gompertz_points <- gompertz_model(t = timepoints, 
         r_max = coef(fit_gompertz)["r_max"], 
         K = coef(fit_gompertz)["K"], 
         N_0 = coef(fit_gompertz)["N_0"], 
         t_lag = coef(fit_gompertz)["t_lag"])
logistc_df2 <- data.frame(timepoints, logistic_points)
logistic_df2$model <- "Logistic model"
names(logistic_df2) <- c("Time", "Log(PopBio)", "model")
logistic_df3 <- data.frame(timepoints, gompertz_points)
logistic_df3$model <- "Gompertz model"
names(logistic_df3) <- c("Time", "Log(PopBio)", "model")
model_frame <- rbind(logistic_df2, logistic_df3)
logistic_df2 <- data.frame(timepoints, logistic_points)
logistic_points <- log(logistic_model(t = timepoints, 
          r_max = coef(fit_logistic)["r_max"], 
          K = coef(fit_logistic)["K"], 
          N_0 = coef(fit_logistic)["N_0"]))
gompertz_points <- gompertz_model(t = timepoints, 
         r_max = coef(fit_gompertz)["r_max"], 
         K = coef(fit_gompertz)["K"], 
         N_0 = coef(fit_gompertz)["N_0"], 
         t_lag = coef(fit_gompertz)["t_lag"])
logistic_df2 <- data.frame(timepoints, logistic_points)
logistic_df2$model <- "Logistic model"
names(logistic_df2) <- c("Time", "Log(PopBio)", "model")
logistic_df3 <- data.frame(timepoints, gompertz_points)
logistic_df3$model <- "Gompertz model"
names(logistic_df3) <- c("Time", "Log(PopBio)", "model")
model_frame <- rbind(logistic_df2, logistic_df3)
model_frame
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = 'Time', y = 'Log(PopBio)', col = 'model'), size = 1)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = model_frame$Time, y = model_frame$Log(PopBio), col = model_frame$model), size = 1)
timepoints <- mydata$Time
logistic_points <- log(logistic_model(t = timepoints, 
          r_max = coef(fit_logistic)["r_max"], 
          K = coef(fit_logistic)["K"], 
          N_0 = coef(fit_logistic)["N_0"]))
gompertz_points <- gompertz_model(t = timepoints, 
         r_max = coef(fit_gompertz)["r_max"], 
         K = coef(fit_gompertz)["K"], 
         N_0 = coef(fit_gompertz)["N_0"], 
         t_lag = coef(fit_gompertz)["t_lag"])
logistic_df2 <- data.frame(timepoints, logistic_points)
logistic_df2$model <- "Logistic model"
names(logistic_df2) <- c("Time", "Log_PopBio", "model")
logistic_df3 <- data.frame(timepoints, gompertz_points)
logistic_df3$model <- "Gompertz model"
names(logistic_df3) <- c("Time", "Log_PopBio", "model")
model_frame <- rbind(logistic_df2, logistic_df3)
model_frame
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = model_frame$Time, y = model_frame$Log_PopBio, col = model_frame$model), size = 1)
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = model_frame$Time, y = model_frame$Log_PopBio, col = model_frame$model), size = 1) +
theme_bw()+ # make the background white # make the plot square 
labs(x = "Time", y = "log(PopBio)")+ scale_x_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200)) +
scale_y_continuous(limits=c(0, 1200), breaks=c(0, 400, 800, 1200))
ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = model_frame$Time, y = model_frame$Log_PopBio, col = model_frame$model), size = 1) +
theme_bw()+ # make the background white # make the plot square 
labs(x = "Time", y = "log(PopBio)")
p_gompertz
p_gompertz<-ggplot(mydata, aes(x = mydata$Time, y = log(mydata$PopBio))) +
geom_point(size = 3) +
geom_line(data = model_frame, aes(x = model_frame$Time, y = model_frame$Log_PopBio, col = model_frame$model), size = 1) +
theme_bw()+ # make the background white # make the plot square 
labs(x = "Time", y = "log(PopBio)")
p_gompertz
logistic_df2
logistic_df3
RSS_Gompertz <- sum(residuals(fit_gompertz)^2)
TSS_Gompertz <- sum((logistic_df3$Log_PopBio - mean(logistic_df1$Log_PopBio))^2)
RSq_Gompertz <- 1 - (RSS_Gompertz/TSS_Gompertz)
RSq_Gompertz
RSS_Gompertz <- sum(residuals(fit_gompertz)^2)
TSS_Gompertz <- sum((logistic_df3$Log_PopBio - mean(logistic_df3$Log_PopBio))^2)
TSS_Gompertz
RSS_Gompertz
RSq_Gompertz <- 1 - (RSS_Gompertz/TSS_Gompertz)
RSq_Gompertz # 0.986727
p_gompertz
Gompertz_sse<- sum((log(mydata$PopBio)-logistic_df3$Log_PopBio)^2)
Gompertz_L<- (-(length(logistic_df3$Log_PopBio)/2)*log(2*pi)-(length(logistic_df3$Log_PopBio)/2)*log(Gompertz_sse/length(logistic_df3$Log_PopBio))-length(logistic_df3$Log_PopBio)/2)
Gompertz_AIC <-(2*4-2*logistic_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
##################AICc############################
Gompertz_AICc <-Gompertz_AIC+(2*4*(4+1))/(length(logistic_df3$Log_PopBio)-4-1)
Gompertz_AICc
###########AIC############
###########k = 4, n = length(logistic_df1$PopBio)
Gompertz_sse<- sum((log(mydata$PopBio)-logistic_df3$Log_PopBio)^2)
Gompertz_L<- (-(length(logistic_df3$Log_PopBio)/2)*log(2*pi)-(length(logistic_df3$Log_PopBio)/2)*log(Gompertz_sse/length(logistic_df3$Log_PopBio))-length(logistic_df3$Log_PopBio)/2)
Gompertz_AIC <-(2*4-2*logistic_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
##################AICc############################
Gompertz_AICc <-Gompertz_AIC+(2*4*(4+1))/(length(logistic_df3$Log_PopBio)-4-1)
Gompertz_AICc
cat(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
cat(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc,Gompertz_AICc)
cat(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSS_Gompertz)
cat(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSq_Gompertz)
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
AICc <- c(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc,Gompertz_AICc)
RSq <- c(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSq_Gompertz)
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
AICc <- c(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc,Gompertz_AICc)
RSq <- c(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSq_Gompertz)
AIC
names(AIC)<-('lm1','lm2','poly','logistic','gompertz')
names(AIC)<-c('lm1','lm2','poly','logistic','gompertz')
AIC
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
AIC 
Gompertz_AIC
Gompertz_AIC <-(2*4-2*Gompertz_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
Gompertz_AICc
Gompertz_AIC
Gompertz_L<- (-(length(logistic_df3$Log_PopBio)/2)*log(2*pi)-(length(logistic_df3$Log_PopBio)/2)*log(Gompertz_sse/length(logistic_df3$Log_PopBio))-length(logistic_df3$Log_PopBio)/2)
Gompertz_AIC <-(2*4-2*Gompertz_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
Gompertz_sse<- sum((log(mydata$PopBio)-logistic_df3$Log_PopBio)^2)
Gompertz_L<- (-(length(logistic_df3$Log_PopBio)/2)*log(2*pi)-(length(logistic_df3$Log_PopBio)/2)*log(Gompertz_sse/length(logistic_df3$Log_PopBio))-length(logistic_df3$Log_PopBio)/2)
Gompertz_AIC <-(2*4-2*Gompertz_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
Gompertz_AICc
Gompertz_L
length(logistic_df3$Log_PopBio)
Gompertz_AIC <- (2*4-2*Gompertz_L)/length(logistic_df3$Log_PopBio)
Gompertz_AIC
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
names(AIC)<-c('lm1','lm2','poly','logistic','gompertz')
AIC
names(AIC)<-c('lm1','lm2','poly','logistic','gompertz')
names(AICc)<-c('lm1','lm2','poly','logistic','gompertz')
names(RSq)<-c('lm1','lm2','poly','logistic','gompertz')
AIC
AICc
RSq
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
AICc <- c(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc,Gompertz_AICc)
RSq <- c(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSq_Gompertz)
names(AIC)<-c('lm1','lm2','poly','logistic','gompertz')
names(AICc)<-c('lm1','lm2','poly','logistic','gompertz')
names(RSq)<-c('lm1','lm2','poly','logistic','gompertz')
AIC
AICc
RSq
Gompertz_AICc
Gompertz_AIC
Gompertz_AICc <-Gompertz_AIC+(2*4*(4+1))/(length(logistic_df3$Log_PopBio)-4-1)
Gompertz_AICc
Gompertz_AICc
AIC <- c(lm1_AIC,lm2_AIC,poly_AIC,logistic_AIC,Gompertz_AIC)
AICc <- c(lm1_AICc,lm1_AICc,poly_AICc,logistic_AICc,Gompertz_AICc)
RSq <- c(RSq_lm1,RSq_lm2,RSq_poly,RSq_Logistic,RSq_Gompertz)
names(AIC)<-c('lm1','lm2','poly','logistic','gompertz')
names(AICc)<-c('lm1','lm2','poly','logistic','gompertz')
names(RSq)<-c('lm1','lm2','poly','logistic','gompertz')
AIC
AICc
RSq
